name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        features:
          - winit
          - gl
          - winit,gl
          - vulkan
        include:
          - os: macos-latest
            features: "winit,gl,metal"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features ${{ matrix.features }} -- -D warnings

      - name: RustFmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --features ${{ matrix.features }} -- --check

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features ${{ matrix.features }}

      - name: Cargo Doc
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --lib --no-deps --features ${{ matrix.features }}

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Miri
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: miri

      # Separate miri setup from run so that 'Miri Test'
      # logs are clean.
      - name: Setup Miri
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup

      - name: Miri Test
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --features winit
